Things which we should get into mathlib!

Number fields.
--------------

1) Define a Dedekind domain.

2) Prove that every ideal of the integers of a Dedekind domain factorises uniquely into prime ideals.

3) Define the class group of a Dedekind domain.

4) Define a number field.

5) Define the integers of a number field

6) Prove that the integers of a number field are a Dedekind domain.

7) Prove that the class group of a number field is finite.

8) Define the zeta function of a number field.

9) Prove that the zeta function of a number field has a meromorphic extension to the complex numbers.

10) Define the regulator of a number field.

11) State the analytic class number formula.

12) Prove the analytic class number formula.

13) Do everything for global function fields.

Group cohomology.
-----------------

14) Define group cohomology.

15) Prove the Hochschild-Serre spectral sequence.

16) Prove the long exact sequence of terms of low degree.

17) Define profinite group cohomology for discrete G-modules.

Galois theory
-------------

18) State the fundamental theorem of Galois theory for finite normal separable extensions of fields.

19) Prove the fundamental theorem of Galois theory.

20) State and prove the version for algebraic normal separable extensions of possibly infinite degree.

Local Fields
------------

21) Set up the basic theory of fields complete with respect to a discrete valuation (integer ring, uniformiser, PID, finite extensions, extension of valuation)

22) Set up the basic theory of Galois groups of finite extensions of p-adic fields (Frobenius elements, inertia groups, higher ramification groups, lower numbering, upper numbering)

Galois cohomology
-----------------

23) Define the algebraic closure of a field.

24) State local Tate duality.

25) Prove local Tate duality.

26) State the global duality theorems (Greenberg-Wiles etc).

27) Formalise proofs of all the theorems in Milne's book "arithmetic duality theorems".

Harmonic analysis
-----------------

28) Prove the Pontrjagin duality theorem.

Elliptic curves
---------------

29) Define an elliptic curve over a field k.

30) Define the group structure on the k-points of an elliptic curve, proving that it is a group.

31) Prove that if k is a number field then the group of k-points of an elliptic curve are finitely-generated.

32) Define the L-function of an elliptic curve over a number field, proving it converges for Re(s) sufficiently large.

33) State the conjecture asserting that the L-function has holomorphic continuation to the complex plane. State the Birch and Swinnerton-Dyer conjecture for elliptic curves over the rational numbers.

Algebra
-------

31) Eigenspaces and generalised eigenspaces.

32) Structure theorem for finitely-generated modules over a PID.

33) Jordan decomposition

Algebraic Topology
------------------

34) Define homology groups H_n(X;R), cohomology groups H^n(X;R)
and homotopy groups pi_n(X) of a topological space.

Representation Theory
---------------------

35) Define a representation of a group over a field (or perhaps even a ring or semiring)

36) Maschke's theorem, Schur's Lemma.

37) Basic representation theory of finite groups (e.g. irreducible characters form a basis of class functions on the group)

38) Extension to compact Lie groups.


------------------------------------

Also some chores (from Chris Hughes)

- zmod - requiring a pnat is a superfluous assumption, it should be refactored so we can quotient by zero. Also, zmodp should take a nat.primes and not a hypothesis hp : p.prime so there is no need for two types.

- GCD domain - Currently integrated with normalisation domain, but there should be a version without this since there are GCD domains that do not have a normalisation function. Maybe GCD domains are just pointless though. [KB indeed can't (yet) see the point of these things]

- Bundled Homs - refactor ideals, subgroups etc to use bundled Homs.

- mv polynomials - degree lemmas, integral domain etc, everything relevant on polynomials should be done for mv polynomials.

- finset.Icc, list.Icc, finset.Ioc etc.
